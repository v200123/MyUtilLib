
plugins{
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}
apply from : '../app/config.gradle'
android {
    signingConfigs {
        debug {
            storeFile file('D:\\LiuChangFile\\ChekIn.jks')
            storePassword 'woaini123'
            keyPassword 'woaini123'
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.32"
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api "androidx.recyclerview:recyclerview:1.2.0"
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
//    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.6'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    api 'com.lxj:xpopup:2.2.21'
    api 'com.orhanobut:logger:2.2.0'

}
task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                if (project.plugins.hasPlugin('com.android.library')) {
                    if (components.findByName('release') != null) from components.release
                    else {
                        artifact("$buildDir/outputs/aar/${project.name}-release.aar")
                        with(pomDependencies)
                    }
                } else if (project.plugins.hasPlugin('java-library') || project.plugins.hasPlugin('java')) {
                    from components.java
                }
                groupId = 'top.lastcoffee'
                artifactId = 'commonLib'
                version = this.ext.myVersion
                artifact generateSourcesJar
            }
        }
        repositories {
            //这个是发布到线上仓库的功能支持
            maven {
                url = "http://www.lastcoffee.top:8081/repository/myRep/"
                credentials {
                    username = "admin"
                    password = "woaini123"
                }
            }
        }

    }

}
ext.pomDependencies = {
    pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')
        configurations.implementation.allDependencies.each {
            if (it.group != null && it.name != null && it.version != null) {
                def dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', it.group)
                dependencyNode.appendNode('artifactId', it.name)
                dependencyNode.appendNode('version', it.version)
            }
        }
    }
}




